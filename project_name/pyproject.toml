[tool.poetry]
name = "{{ project_name }}"
version = "0.1.0"
description = ""
authors = ["Tobi-De <tobidegnon@proton.me>"]
license = ""
readme = "README.md"
packages = [{ include = "{{ project_name }}" }]

[tool.poetry.dependencies]
python = "^3.10"


Django = "^4.1.7"
django-environ = "^0.9.0"
django-htmx = "^1.13.0"

whitenoise = { extras = ["brotli"], version = "^6.3.0" }
gunicorn = "^20.1.0"
psycopg2 = "^2.9.5"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "^3.8.1"

[tool.poe.tasks]
r = { cmd = "python manage.py runserver --nostatic", help = "Start dev serve" }
u = { cmd = "python manage.py makesuperuser", help = "Create a new superuser using environment varibales, look in your .env.template file" }
m = { cmd = "python manage.py migrate", help = "Apply migrations" }
mk = { cmd = "python manage.py makemigrations", help = "Make migrations" }
rd = { cmd = "python manage.py reset_db --noinput", help = "Delete and recreate your database" }
t = { cmd = "tailwindcss -i {{ project_name }}/static/css/input.css -o {{ project_name }}/static/css/output.css --watch", help = "Compile tailwind in watch mode" }
rm = { cmd = "cuzzy rm-migrations {{ project_name }}", help = "Delete all migrations files" }
RD = ["rd", "rm", "mk", "m"] # Reset your database, delete all migrations files, make news migrations for all apps, apply all migrations

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
